name: Build and Publish Packages

env:
  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:
    branches:
      - feature/*
      - hotfix/*
      - bugfix/*

  pull_request:
    types: [closed]
    branches:
      - main
      - dev
      - release/*

  repository_dispatch:
    types: [update_dependencies]

jobs:
  build-publish:
    if: ${{ github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' }} 
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install pnpm
        run: npm install -g pnpm@8.6

      - name: Determine new version for main
        id: new_version
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          PR_TITLE="${{ github.event.pull_request.title }}"
          echo "PR Title: $PR_TITLE"
          git status
          if echo "$PR_TITLE" | grep -iq "BREAKING CHANGE"; then
            echo "Triggering Major Version Bump"
            npm version major
          elif echo "$PR_TITLE" | grep -iq "feat:"; then
            echo "Triggering Minor Version Bump"
            npm version minor
          elif echo "$PR_TITLE" | grep -iq "fix:"; then
            echo "Triggering Patch Version Bump"
            npm version patch
          else
            echo "No significant changes detected."
            npm version patch
          fi

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git checkout main
          git merge -X theirs
          git add package.json pnpm-lock.yaml
          git commit --allow-empty -m "[ACTIONS MESSAGE] Update package version"
          git push origin main
        
        
      - name: Install dependencies
        run: pnpm install
      
      # - name: Run ESLint
      #   run: pnpm eslint:check
      
      - name: Run Dependencies Audit
        run: pnpm audit || true
      
      # - name: Build rollup
      #   run: pnpm build-rollup

      - name: Publish to Firmer Packages
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.GIT_TOKEN}}

      - name: Create and push new tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          echo "PACKAGE_VERSION=$(npm pkg get version | tr -d '\"')" >> $GITHUB_ENV
          git tag ${{ env.PACKAGE_VERSION }}
          git push origin ${{ env.PACKAGE_VERSION }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.PACKAGE_VERSION }}
          name: "Release ${{ env.PACKAGE_VERSION }}"
          body: "## What's New\n - Automated release from CI/CD"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Checkout and update dev branch
        run: |
          git fetch origin dev
          git checkout dev
          git pull origin dev
          git merge origin/main --no-ff --allow-unrelated-histories || true
          git checkout --theirs .
          git add .
          git commit -m "[ACTIONS MESSAGE] Update package version"
          npm version prerelease --preid=dev
          git push origin dev
        continue-on-error: true
        
  build-versioning-dev:
    if: ${{ github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'dev' }}
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install pnpm
        run: npm install -g pnpm@8.6

      # 3. Install dependencies
      - name: Install dependencies
        run: pnpm install
        
      # # Optional: Run ESLint
      # - name: Run ESLint
      #   run: pnpm eslint:check

      # - name: Run Dependencies Audit
      #   run: pnpm audit || true

      # # 4. Build Rollup
      # - name: Build rollup
      #   run: pnpm build-rollup


      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Bump version
        run: npm version prerelease --preid=dev

      - name: Publish to Firmer Packages
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.GIT_TOKEN}}

      - name: Commit version bump
        run: |
          git checkout dev
          git add package.json pnpm-lock.yaml
          git commit --allow-empty -m "[ACTIONS MESSAGE] Update package version"
          git push origin dev


  build-test:
    if: startsWith(github.ref, 'refs/heads/bugfix/') || startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/hotfix/')
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # 2. Install pnpm
      - name: Install pnpm
        run: npm install -g pnpm@8.6

      # 3. Install dependencies
      - name: Install dependencies
        run: pnpm install

      # # 4. Build Rollup
      # - name: Build rollup
      #   run: pnpm build-rollup

      # - name: Run ESLint
      #   run: pnpm eslint:check

      # - name: Run Dependencies Audit
      #   run: pnpm audit || true

  automation_update_package_for_production:
    if: github.event_name == 'repository_dispatch'
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install pnpm
        run: yarn add -g pnpm@8.6

      - name: Install dependencies
        run: yarn install

      - name: Install package
        run: yarn add @FellowLIS/fellow-components

      - name: Build rollup
        run: yarn build-rollup

      - name: commit
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git checkout main
          git status
    