name: Build and Publish Packages

on:
  pull_request:
    types: [closed]
    branches:
      - main
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build-publish:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      # 1. Install Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # 2. Install pnpm
      - name: Install pnpm
        run: npm install -g pnpm@8.6

      - name: Determine new version for main
        id: new_version
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          if echo "$PR_TITLE" | grep -iq "BREAKING CHANGE"; then
            echo "Triggering Major Version Bump"
            npm version major
          elif echo "$PR_TITLE" | grep -iq "feat:"; then
            echo "Triggering Minor Version Bump"
            npm version minor
          elif echo "$PR_TITLE" | grep -iq "fix:"; then
            echo "Triggering Patch Version Bump"
            npm version patch
          else
            echo "No significant changes detected."
            npm version patch
          fi


      - name: Setup .npmrc for GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GIT_TOKEN }}" >> ~/.npmrc

        

      - name: Install dependencies
        run: pnpm install


      # - name: Check Node Modules Path
      #   run: ls -la ~/.pnpm-store

      - name: Check node_modules
        run: ls -la node_modules
      
      
      # 4. Build Rollup
      - name: Build rollup
        run: pnpm pnpm rollup -c

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git checkout main
          git merge -X theirs
          git add package.json
          git add pnpm-lock.yaml
          git commit --allow-empty -m "[ACTIONS MESSAGE] Update package version"
          git push origin main
